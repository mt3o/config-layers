"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});function c(a){return typeof a=="string"}function f(a){return a.split(new RegExp("(?<!\\.)\\.(?!\\.)")).map(e=>e.replace(/([^,])\.([.]+[^,])/gu,"$1$2"))}function v(a,e){for(const t in e)Object.prototype.hasOwnProperty.call(e,t)&&typeof e[t]=="object"&&e[t]!==null&&!Array.isArray(e[t])?(t in a||(a[t]={}),v(a[t],e[t])):a[t]=e[t];return a}function y(a){return a&&typeof a=="object"&&!Object.isFrozen(a)&&(Object.getOwnPropertyNames(a).forEach(e=>{const t=a[e];t&&typeof t=="object"&&y(t)}),Object.freeze(a)),a}class p{layers;flattened;constructor(e,t=void 0){this.layers=e,this.flattened=Array.from(this.layers.values()).reduce((n,i)=>v(n,i),{}),this.options={notFoundHandler:n=>{throw new Error(`Key not found: ${String(n)}`)},freeze:!0,...t??{}}}options;static fromLayers(e,t){const n=new p(new Map(e.map(i=>[i.name,i.config])),t);return n.options.freeze&&y(n),new Proxy(()=>{},{apply(i,r,s){const[o,l]=s;return n.__withFallback(o,l)},has(i,r){const s=c(r)?f(r):[r];return s.length==1?n.__getFlat(s[0])!==void 0:s.length>1?n.__getComplex(r)!==void 0:!1},getOwnPropertyDescriptor(i,r){return{enumerable:!0,configurable:!0}},deleteProperty(i,r){return!1},set(){return!1},defineProperty(){return!1},ownKeys(){const r=Array.from(n.layers.values()).map(o=>Object.keys(o)),s=Array.from(new Set(r.flat()));return{...s,length:s.length}},get(i,r,s){if(r==="__inspect")return n.__inspect.bind(n);if(r==="__derive")return n.__derive.bind(n);if(r==="getAll")return n.__getAll.bind(n);const o=c(r)?f(r):[r];if(o.length==1)return n.__getFlat(o[0]);if(o.length>1)return n.__getComplex(r)}})}__withFallback(e,t){const n=c(e)?f(e):[e];return n.length==1?this.__getFlat(n[0],t):this.__getComplex(e,t)}__derive(e,t,n){const i=Array.from(this.layers.entries()).reduce((r,[s,o])=>(r[s]=o,r),{});if(typeof e=="object"&&t===void 0){const r=Object.assign({},this.options,e);return p.fromLayers(Object.entries(i).map(([s,o])=>({name:s,config:o})),r)}return typeof e=="string"&&t!==void 0?(i[e]=t,p.fromLayers(Object.entries(i).map(([r,s])=>({name:r,config:s})),Object.assign({},this.options,n??{}))):p.fromLayers(Object.entries(i).map(([r,s])=>({name:r,config:s})),Object.assign({},this.options,n??{}))}__getAll(e){const t=c(e)?f(e):[e],n=Array.from(this.layers.entries()).reverse(),i=[];for(const[r,s]of n){if(!s)continue;let o=s,l=!0;for(const u of t)if(o&&u in o)o=o[u];else{l=!1;break}l&&i.push({layer:r,value:o})}return i}__getComplex(e,t){const n=c(e)?f(e):[e],i=Array.from(this.layers.values()).reverse();let r={},s;for(const o of i){if(!o)continue;let l=o,u=!0;for(const d of n)if(l&&d in l)l=l[d];else{u=!1;break}if(u&&typeof l!="object"){s=l;break}else u&&typeof l=="object"&&(s=void 0,r={...r,...l})}return s!==void 0?s:Object.keys(r).length>0?r:t||this.options.notFoundHandler(e)}__getFlat(e,t){const n=this.flattened[e];return n!==void 0?n:t||this.options.notFoundHandler(e)}__inspect(e){const t={key:e,resolved:{value:void 0,source:""},layers:[]},n=c(e)?f(e):[e],i=Array.from(this.layers.keys()).reverse();if(n.length<1)return{key:e,resolved:{value:void 0,source:""},layers:i.map(r=>({layer:r,value:void 0,isPresent:!1,isActive:!1}))};if(n.length==1){let r=!1;for(const s of i){const o=this.layers.get(s),l=!!(o&&e in o),u=l?o?.[e]:void 0,d=l?!r:!1;t.layers.push({layer:s,value:l?u:void 0,isPresent:l,isActive:d}),d&&!r&&(t.resolved.value=u,t.resolved.source=s,r=!0)}}if(n.length>1)for(const r of i){let s=this.layers.get(r);if(!s)continue;let o=!0;for(const u of n)if(s&&typeof s=="object"&&u in s)s=s[u];else{o=!1;break}o||(s=void 0);const l=o&&s!==void 0;t.layers.push({layer:r,value:l?s:void 0,isPresent:o,isActive:l&&t.resolved.value===void 0}),l&&t.resolved.value===void 0&&(t.resolved.value=s,t.resolved.source=r)}return t}}exports.LayeredConfig=p;
