name: CI Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write  # allow creating GitHub Releases
  id-token: write  # for npm provenance (optional)

jobs:
  build_test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Install dependencies
        run: pnpm install

      - name: Bump package version (no git tag/commit)
        run: npm version patch --no-git-tag-version

      - name: Run tests
        run: pnpm test

      - name: Build package
        run: pnpm build

      - name: Pack tarball
        run: npm pack

      - name: Save artifact (package tarball)
        uses: actions/upload-artifact@v4
        with:
          name: npm-package
          path: |
            *.tgz
            dist/**
          if-no-files-found: error

  release:
    name: Create GitHub Release
    needs: build_test
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: npm-package
          path: ./artifact

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          files: |
            artifact/*.tgz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish_npm:
    name: Publish to npm
    needs: release
    runs-on: ubuntu-latest
    env:
      # Set this secret in your repository settings: Settings > Secrets and variables > Actions > New repository secret
      # Name: NPM_TOKEN, Value: an npm access token with publish rights for the package scope
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Install dependencies
        run: pnpm install --ignore-scripts

      - name: Determine if package is private
        id: private
        shell: bash
        run: |
          PRIVATE=$(node -e "console.log(require('./package.json').private ? 'true' : 'false')")
          echo "private=$PRIVATE" >> $GITHUB_OUTPUT

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: npm-package
          path: ./artifact

      - name: Publish to npm (tarball)
        if: ${{ steps.private.outputs.private == 'false' && env.NPM_TOKEN != '' }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm whoami || true
          npm publish --provenance --access public artifact/*.tgz

      - name: Skip publish (private or missing token)
        if: ${{ steps.private.outputs.private == 'true' || env.NPM_TOKEN == '' }}
        run: |
          echo "Skipping npm publish because package is private or NPM_TOKEN is not set."
